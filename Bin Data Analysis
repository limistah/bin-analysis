{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8504706,"sourceType":"datasetVersion","datasetId":5076105},{"sourceId":8504988,"sourceType":"datasetVersion","datasetId":5076319},{"sourceId":8539242,"sourceType":"datasetVersion","datasetId":5101106},{"sourceId":8540098,"sourceType":"datasetVersion","datasetId":5101797},{"sourceId":8540122,"sourceType":"datasetVersion","datasetId":5101817},{"sourceId":8574788,"sourceType":"datasetVersion","datasetId":5127389},{"sourceId":8840292,"sourceType":"datasetVersion","datasetId":5320317},{"sourceId":8841072,"sourceType":"datasetVersion","datasetId":5320896}],"dockerImageVersionId":30698,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# # This Python 3 environment comes with many helpful analytics libraries installed\n# # It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# # For example, here's several helpful packages to load\n\n# # Get the temperature bin values for a month\n\n# import numpy as np # linear algebra\n# import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n# import matplotlib.pyplot as plt\n# import numpy as np\n# import math\n\n\n# year = 0\n# month_data = [\n#   {\n#     \"month\": \"January\",\n#     \"file_path\": \"/kaggle/input/ikeja-datasets/ikeja_datasets.csv\"\n#   },\n# #   {\n# #     \"month\": \"February\",\n# #     \"file_path\": \"/kaggle/input/ikeja-datasets/ikeja_datasets.csv\"\n# #   },\n# #   {\n# #     \"month\": \"March\",\n# #     \"file_path\": \"/kaggle/input/ikeja-datasets/ikeja_datasets.csv\"\n# #   },\n# #   {\n# #     \"month\": \"April\",\n# #     \"file_path\": \"/kaggle/input/ikeja-datasets/ikeja_datasets.csv\"\n# #   },\n# #   {\n# #     \"month\": \"May\",\n# #     \"file_path\": \"/kaggle/input/ikeja-datasets/ikeja_datasets.csv\"\n# #   },\n# #   {\n# #     \"month\": \"June\",\n# #     \"file_path\": \"/kaggle/input/ikeja-datasets/ikeja_datasets.csv\"\n# #   },\n# #   {\n# #     \"month\": \"July\",\n# #     \"file_path\": \"/kaggle/input/ikeja-datasets/ikeja_datasets.csv\"\n# #   },\n# #   {\n# #     \"month\": \"August\",\n# #     \"file_path\": \"/kaggle/input/ikeja-datasets/ikeja_datasets.csv\"\n# #   },\n# #   {\n# #     \"month\": \"September\",\n# #     \"file_path\": \"/kaggle/input/ikeja-datasets/ikeja_datasets.csv\"\n# #   },\n# #   {\n# #     \"month\": \"October\",\n# #     \"file_path\": \"/kaggle/input/ikeja-datasets/ikeja_datasets.csv\"\n# #   },\n# #   {\n# #     \"month\": \"November\",\n# #     \"file_path\": \"/kaggle/input/ikeja-datasets/ikeja_datasets.csv\"\n# #   },\n# #   {\n# #     \"month\": \"December\",\n# #     \"file_path\": \"/kaggle/input/ikeja-datasets/ikeja_datasets.csv\"\n# #   }\n# ]\n\n# temp_month_bin_values = {}\n\n# for rec in month_data:\n#     # Assuming the file is named 'data.csv'\n#     temp_file_path = rec[\"file_path\"]  # Replace with the name of your uploaded file\n#     temp_df = pd.read_csv(temp_file_path)\n#     # Unpack data into separate lists\n#     month = rec[\"month\"]\n\n#     current_year = 0\n#     daily_record_for_year = {}\n#     years_in_ds = []\n#     cummulated_record_for_years = []\n#     for index, row in temp_df.iterrows():\n#         if not math.isnan(row.iloc[0]):\n#             current_year = int(row.iloc[0])\n#             years_in_ds.extend([current_year])\n#         if not math.isnan(row.iloc[1]):\n#             temperatures = [float(val) for val in row[2:26]]  # Convert to floats\n#             daily_record_for_year.setdefault(current_year, []).extend([temperatures])\n#             cummulated_record_for_years.extend([temperatures])\n#     total_observed_measurements = 0;\n#     total_observed_years = 0\n\n#     for year, temperatures in daily_record_for_year.items():\n#         temp_df = pd.DataFrame(np.array(temperatures))\n#         dpd = pd.DataFrame(np.array(temperatures))\n#         daily_record_for_year[year] = dpd\n\n#     cummulated_record_for_years_df = pd.DataFrame(cummulated_record_for_years)\n\n#     # store the total number of observations for each year\n#     yearly_metadata_for_month = []\n#     yearly_metadata_for_month_df = pd.DataFrame()\n#     max_min_by_year = []\n#     for year, df in daily_record_for_year.items():\n#         total_obs = df.count().sum()\n#         max_val = df.max().max()\n#         min_val = df.min().min()\n#         col = {\"Year\": year, \"Total Observations\": total_obs, \"Minimum Value\": min_val, \"Maximum Value\":max_val}\n#         yearly_metadata_for_month.append(col)\n#         # Set the new column names\n#         max_min_by_year.extend([[year, total_obs, min_val, max_val]])\n\n#     max_min_by_year = pd.DataFrame(max_min_by_year)\n#     max_min_by_year_df = pd.DataFrame(max_min_by_year)\n\n#     spec_values = range(30, 41, 2)\n#     spec_daily_record_for_year = {}\n#     for spec_value in spec_values:\n#         for year in years_in_ds:\n#             year_data = []\n\n#             for index, row in daily_record_for_year[year].iterrows():\n#                 if not math.isnan(row[0]):\n#                     year_data.append(spec_value - row)\n\n#             year_data_df = pd.DataFrame(year_data)\n#             row_sum = year_data_df.sum(axis=1) * (1/24)\n#             row_sum_if = (year_data_df > 0).mul(year_data_df).sum(axis=1) * (1/24)\n#             year_data_df['SumIF'] = row_sum_if\n#             year_data_df['Sum'] = row_sum\n#             if len(year_data) > 0:\n#                 spec_daily_record_for_year[f\"{spec_value}_{year}\"] = year_data_df\n\n#     val_range = range(1,51)\n#     low_high_difference = {}\n\n#     low_high_difference[\"diff_range\"] = []\n#     for i, val_range in enumerate(val_range):\n#         low_df = cummulated_record_for_years_df.where(cummulated_record_for_years_df >= val_range, 0)\n#         low_df_sum = (low_df > 0).where((low_df > 0) == True).sum().sum()\n\n#         value_with_interval = val_range + 0.9\n#         high_df = cummulated_record_for_years_df.where(cummulated_record_for_years_df > value_with_interval, 0)\n#         high_df_sum = (high_df > 0).where((high_df > 0) == True).sum().sum()\n#         diff = low_df_sum - high_df_sum\n#         low_high_difference[\"diff_range\"].append(diff)\n\n#         prev_val = 0;\n#         if (i > 0):\n#             prev_val = low_high_difference[\"diff_range\"][i]\n#             new_val = prev_val - diff\n\n\n#     total_obs_avg = pd.DataFrame(yearly_metadata_for_month)[\"Total Observations\"].mean()\n#     low_high_difference_sum = pd.DataFrame(low_high_difference[\"diff_range\"]).sum()[0]\n#     low_high_difference[\"calculatd_diff_range\"] = []\n#     low_high_difference[\"bin_values\"] = []\n#     for value in low_high_difference[\"diff_range\"]:\n#         calc_val = value / low_high_difference_sum * round(total_obs_avg)\n#         low_high_difference[\"calculatd_diff_range\"].append(calc_val)\n#         low_high_difference[\"bin_values\"].append(calc_val / total_obs_avg)\n\n#     temp_month_bin_values.setdefault(month, []).extend(low_high_difference[\"bin_values\"])\n\n\n# temp_bin_keys = []\n# for i, val_range in enumerate(range(1,51)):\n#     temp_bin_keys.append(f\"{i} - {i+0.9}\")\n# bin_pd = pd.DataFrame({\"Temp Range\": temp_bin_keys, \"Values\": temp_month_bin_values[\"January\"]}).round(4)\n\n\n\n# import matplotlib.pyplot as plt\n\n# fig, ax = plt.subplots()\n# ax.axis('off')\n# the_table = ax.table(colLabels=bin_pd.columns, cellText=bin_pd.values, loc='center')\n# the_table.auto_set_font_size(False)\n# the_table.set_fontsize(10)\n# plt.show()","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-24T02:16:38.191771Z","iopub.execute_input":"2024-07-24T02:16:38.192480Z","iopub.status.idle":"2024-07-24T02:16:40.767462Z","shell.execute_reply.started":"2024-07-24T02:16:38.192445Z","shell.execute_reply":"2024-07-24T02:16:40.766297Z"},"trusted":true},"execution_count":1,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{"execution":{"iopub.status.busy":"2024-07-08T07:10:07.218138Z","iopub.execute_input":"2024-07-08T07:10:07.218548Z","iopub.status.idle":"2024-07-08T07:10:07.228090Z","shell.execute_reply.started":"2024-07-08T07:10:07.218514Z","shell.execute_reply":"2024-07-08T07:10:07.226958Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# # This Python 3 environment comes with many helpful analytics libraries installed\n# # It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# # For example, here's several helpful packages to load\n\n# # Get the temperature bin values for a month\n\n# import numpy as np # linear algebra\n# import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# import matplotlib.pyplot as plt\n# import numpy as np\n\n# import math\n\n\n# year = 0\n# rh_month_data = [{\"month\": \"January\", \"file_path\": \"/kaggle/input/ikeja-jan-r-h/ikeja_jan_rh.csv\"}]\n\n# rh_month_bin_values = {}\n\n# for rec in rh_month_data:\n#     # Assuming the file is named 'data.csv'\n#     rh_file_path = rec[\"file_path\"]  # Replace with the name of your uploaded file\n#     rh_df = pd.read_csv(rh_file_path)\n#     # Unpack data into separate lists\n#     rh_month = rec[\"month\"]\n\n#     current_year = 0\n#     daily_record_for_year = {}\n#     years_in_ds = []\n#     cummulated_record_for_years = []\n#     for index, row in rh_df.iterrows():\n#         if not math.isnan(row.iloc[0]):\n#             current_year = int(row.iloc[0])\n#             years_in_ds.extend([current_year])\n#         if not math.isnan(row.iloc[1]):\n#             temperatures = [float(val) for val in row[2:26]]  # Convert to floats\n#             daily_record_for_year.setdefault(current_year, []).extend([temperatures])\n#             cummulated_record_for_years.extend([temperatures])\n#     total_observed_measurements = 0;\n#     total_observed_years = 0\n#     # Assuming 'daily_record_for_year' dictionary has year as key and temperature list as value\n#     for year, temperatures in daily_record_for_year.items():\n#         temp_df = pd.DataFrame(np.array(temperatures))\n#         dpd = pd.DataFrame(np.array(temperatures))\n#         daily_record_for_year[year] = dpd\n#     #     total_observed_measurements\n\n#     cummulated_record_for_years_df = pd.DataFrame(cummulated_record_for_years)\n\n#     # store the total number of observations for each year\n#     yearly_metadata_for_month = []\n#     yearly_metadata_for_month_df = pd.DataFrame()\n#     max_min_by_year = []\n#     for year, df in daily_record_for_year.items():\n#         total_obs = df.count().sum()\n#         max_val = df.max().max()\n#         min_val = df.min().min()\n#         col = {\"Year\": year, \"Total Observations\": total_obs, \"Minimum Value\": min_val, \"Maximum Value\":max_val}\n#         yearly_metadata_for_month.append(col)\n#         # Set the new column names\n#         max_min_by_year.extend([[year, total_obs, min_val, max_val]])\n\n#     max_min_by_year = pd.DataFrame(max_min_by_year)\n#     max_min_by_year_df = pd.DataFrame(max_min_by_year)\n\n#     # Compute a temperature diff using some specified numbers\n#     spec_values = range(30, 41, 2)\n#     spec_daily_record_for_year = {}\n#     for spec_value in spec_values:\n#         for year in years_in_ds:\n#             year_data = []\n\n#             for index, row in daily_record_for_year[year].iterrows():\n#                 if not math.isnan(row[0]):\n#                     year_data.append(spec_value - row)\n\n#             year_data_df = pd.DataFrame(year_data)\n#             row_sum = year_data_df.sum(axis=1) * (1/24)\n#             row_sum_if = (year_data_df > 0).mul(year_data_df).sum(axis=1) * (1/24)\n#             year_data_df['SumIF'] = row_sum_if\n#             year_data_df['Sum'] = row_sum\n#             if len(year_data) > 0:\n#                 spec_daily_record_for_year[f\"{spec_value}_{year}\"] = year_data_df\n\n#     val_range = range(0,101, 5)\n#     rh_low_high_difference = {}\n\n#     rh_low_high_difference[\"diff_range\"] = []\n#     for i, val_range in enumerate(val_range):\n#         low_df = cummulated_record_for_years_df.where(cummulated_record_for_years_df >= val_range, 0)\n#         low_df_sum = (low_df > 0).where((low_df > 0) == True).sum().sum()\n\n#         value_with_interval = val_range + 4.9\n#         high_df = cummulated_record_for_years_df.where(cummulated_record_for_years_df > value_with_interval, 0)\n#         high_df_sum = (high_df > 0).where((high_df > 0) == True).sum().sum()\n#         diff = low_df_sum - high_df_sum\n#         rh_low_high_difference[\"diff_range\"].append(diff)\n\n#         prev_val = 0;\n#         if (i > 0):\n#             prev_val = rh_low_high_difference[\"diff_range\"][i]\n#             new_val = prev_val - diff\n    \n\n#     total_obs_avg = pd.DataFrame(yearly_metadata_for_month)[\"Total Observations\"].mean()\n#     rh_low_high_difference_sum = pd.DataFrame(rh_low_high_difference[\"diff_range\"]).sum()[0]\n#     rh_low_high_difference[\"calculatd_diff_range\"] = []\n#     rh_low_high_difference[\"bin_values\"] = []\n#     for value in rh_low_high_difference[\"diff_range\"]:\n#         calc_val = value / rh_low_high_difference_sum * round(total_obs_avg)\n#         rh_low_high_difference[\"calculatd_diff_range\"].append(calc_val)\n#         rh_low_high_difference[\"bin_values\"].append(calc_val / total_obs_avg)\n    \n\n#     rh_month_bin_values.setdefault(month, []).extend(rh_low_high_difference[\"bin_values\"])\n\n\n# rh_bin_keys = {}\n# for i, val_range in enumerate(range(0,101, 5)):\n#     k = f\"{val_range+5}\"\n#     v = temp_month_bin_values[\"January\"]\n#     rh_bin_keys[f\"{k}\"] =  [v[i]]\n\n# bin_df = pd.DataFrame(rh_bin_keys).head().round(4)\n\n# import matplotlib.pyplot as plt\n\n# fig, ax = plt.subplots()\n# ax.axis('off')\n# the_table = ax.table(colLabels=bin_df.columns, cellText=bin_df.values, loc='center')\n# the_table.auto_set_font_size(False)\n# the_table.set_fontsize(10)\n# the_table.scale(3, 2)\n# plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-08T07:36:33.892467Z","iopub.execute_input":"2024-07-08T07:36:33.892859Z","iopub.status.idle":"2024-07-08T07:36:35.428805Z","shell.execute_reply.started":"2024-07-08T07:36:33.892829Z","shell.execute_reply":"2024-07-08T07:36:35.427721Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# merged_bin_keys = {}\n# merged_bin_keys[\"Temp\"] = temp_bin_keys\n# # merged_bin_keys[\"Temp\"]\n# default_temp_values = [None] * len(temp_month_bin_values[\"January\"])\n\n# for i, val_range in enumerate(range(0,101, 5)):\n#     k = f\"{val_range+5}\"\n#     merged_bin_keys[f\"{k}\"] =  default_temp_values\n\n\n# merged_df = pd.DataFrame(merged_bin_keys)\n# merged_df.set_index(['Temp'])\n\n# import matplotlib.pyplot as plt\n\n# fig, ax = plt.subplots()\n# ax.axis('off')\n# the_table = ax.table(colLabels=merged_df.columns, cellText=merged_df.values, loc='center')\n# the_table.auto_set_font_size(False)\n# the_table.set_fontsize(10)\n# the_table.scale(3, 2)\n# plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-08T07:56:48.921820Z","iopub.execute_input":"2024-07-08T07:56:48.922239Z","iopub.status.idle":"2024-07-08T07:56:53.399857Z","shell.execute_reply.started":"2024-07-08T07:56:48.922191Z","shell.execute_reply":"2024-07-08T07:56:53.398682Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# For example, here's several helpful packages to load\n\n# Get the temperature bin values for a month\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport math\nimport matplotlib.pyplot as plt\n\nyear = 0\nmonth_data = [\n  {\n    \"month\": \"January\",\n    \"temp\": \"/kaggle/input/ikeja-datasets/ikeja_datasets.csv\",\n    \"rh\": \"/kaggle/input/ikeja-jan-r-h/ikeja_jan_rh.csv\",\n  },\n]\n\ndef structure_record_in_df(df):\n    all_time_records = []\n    indexed_records = {}\n    current_year = 0\n    for index, row in df.iterrows():\n        if not math.isnan(row.iloc[0]):\n            current_year = int(row.iloc[0])\n            temp_years_in_ds.extend([current_year])\n        if not math.isnan(row.iloc[1]):\n            temperatures = [float(val) for val in row[2:26]]  # Convert to floats\n            indexed_records.setdefault(current_year, []).extend([temperatures])\n            all_time_records.extend([temperatures])\n    index_records_df = pd.DataFrame(indexed_records)\n    # converts indexed records to pd             \n    for year, temperatures in indexed_records.items():\n        temp_df = pd.DataFrame(np.array(temperatures))\n        dpd = pd.DataFrame(np.array(temperatures))\n        indexed_records[year] = dpd\n    return  indexed_records, all_time_records, index_records_df\n\ndef get_metadata_from_df(df):\n    yearly_metadata = []\n    for year, df in temp_daily_record_for_year.items():\n        total_obs = df.count().sum()\n        max_val = df.max().max()\n        min_val = df.min().min()\n        col = {\"Year\": year, \"Total Observations\": total_obs, \"Minimum Value\": min_val, \"Maximum Value\":max_val}\n        yearly_metadata.append(col)\n    return yearly_metadata\n\ndef get_temp_bin_keys():\n    temp_bin_keys = []\n    for i, val_range in enumerate(range(1,51)):\n        temp_bin_keys.append(f\"{i} - {i+0.9}\")\n    return temp_bin_keys\n\n\ndef get_rh_bin_keys():\n    rh_bin_keys = {}\n    for i, val_range in enumerate(range(0,101, 5)):\n        k = f\"{val_range + 5}\"\n        rh_bin_keys[f\"{k}\"] = []\n    return rh_bin_keys\n\ndef cross_filter_df(main_df, adjacent_df, lowerbound, upperbound):\n    range_filter = ((adjacent_df >= lowerbound) & (adjacent_df <= upperbound))\n    return (main_df.where(range_filter == False, 0))\n\nfor rec in month_data:\n    month = rec[\"month\"]\n    # Assuming the file is named 'data.csv'\n    temp_file_path = rec[\"temp\"]\n    temp_df = pd.read_csv(temp_file_path)\n\n    temp_daily_record_for_year, temp_cummulated_record_for_years, temp_cummulated_record_for_years_df = structure_record_in_df(temp_df)\n\n    # store the total number of observations for each year\n    temp_yearly_metadata_for_month = get_metadata_from_df(temp_daily_record_for_year)\n        \n    \n    rh_file_path = rec[\"rh\"]\n    rh_df = pd.read_csv(rh_file_path)\n    rh_daily_record_for_year, rh_cummulated_record_for_years, _ = structure_record_in_df(rh_df)\n    \n    temp_bin_keys = get_temp_bin_keys()\n    \n    rh_bin_keys = get_rh_bin_keys()\n    \n    merged_bin_keys = {}\n    merged_bin_keys[\"Temp\"] = temp_bin_keys\n\n\n    default_temp_values = [None] * len(temp_bin_keys)\n    rh_cummulated_record_for_years_df = pd.DataFrame(rh_cummulated_record_for_years)\n    temp_cummulated_record_for_years_df = pd.DataFrame(temp_cummulated_record_for_years)\n    for i, val_range in enumerate(range(0,101, 5)):\n        # find anywhere that the pd is between val_range and val_range+0.9 in rh\n        filtered_temp = cross_filter_df(temp_cummulated_record_for_years_df, rh_cummulated_record_for_years_df, val_range, val_range+4.9)\n        \n        low_high_difference = {}\n        low_high_difference[\"diff_range\"] = []\n        for i, temp_val_range in enumerate(range(1,51)):\n            low_df = filtered_temp.where(filtered_temp >= val_range, 0)\n            low_df_sum = (low_df > 0).where((low_df > 0) == True).sum().sum()\n\n            value_with_interval = temp_val_range + 0.9\n            high_df = cummulated_record_for_years_df.where(filtered_temp > value_with_interval, 0)\n            high_df_sum = (high_df > 0).where((high_df > 0) == True).sum().sum()\n            diff = low_df_sum - high_df_sum\n            low_high_difference[\"diff_range\"].append(diff)\n\n            prev_val = 0;\n            if (i > 0):\n                prev_val = low_high_difference[\"diff_range\"][i]\n                new_val = prev_val - diff\n\n        total_obs_avg = pd.DataFrame(yearly_metadata_for_month)[\"Total Observations\"].mean()\n        low_high_difference_sum = pd.DataFrame(low_high_difference[\"diff_range\"]).sum()[0]\n\n        bin_values = []\n        for value in low_high_difference[\"diff_range\"]:\n            calc_val = value / low_high_difference_sum * round(total_obs_avg)\n            bin_values.append(round(calc_val / total_obs_avg, 4))\n\n        k = f\"{val_range+5}\"\n        merged_bin_keys[f\"{k}\"] =  bin_values\n\n\n    merged_df = pd.DataFrame(merged_bin_keys)\n    merged_df.set_index(['Temp'])\n\n    fig, ax = plt.subplots()\n    ax.axis('off')\n    the_table = ax.table(colLabels=merged_df.columns, cellText=merged_df.values, loc='center')\n    the_table.auto_set_font_size(False)\n    the_table.set_fontsize(10)\n    the_table.scale(3, 2)\n    plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-24T04:22:49.744557Z","iopub.execute_input":"2024-07-24T04:22:49.744997Z"},"trusted":true},"execution_count":null,"outputs":[]}]}